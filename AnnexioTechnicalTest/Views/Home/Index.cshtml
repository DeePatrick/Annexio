@using AnnexioTechnicalTest.Helpers
@*@model IEnumerable<AnnexioTechnicalTest.Models.Country>*@
@model PaginatedList<AnnexioTechnicalTest.Models.Country>

@{
    ViewData["Title"] = "Index";
}

<h3>Countries Info</h3>

<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find by name: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
            <input type="submit" value="Search" class="btn btn-default" /> |
            <a asp-action="Index">Back to Full List</a>
        </p>
    </div>
</form>

<table class="table table-bordered table-striped table-sm">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Name</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["RegionSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Region</a>
            </th>
            <th>
                Sub-Region
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            string subregionBloc = "";
            @foreach (var innerItem in item.RegionalBlocs)
            {
                subregionBloc = @innerItem.Acronym;
            }
            <tr>
                <td>@Html.ActionLink(@item.Name, "CountryDetail", new { Name = item.Name }) </td>
                <td>@Html.ActionLink(@item.Region, "RegionDetail", new { Name = item.Region }) </td>
                <td>@Html.ActionLink(@item.Subregion, "SubRegionDetail", new { Name = subregionBloc }) </td>

            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>


